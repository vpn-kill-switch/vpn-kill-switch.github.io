<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>VPN kill switch</title>
    <link>https://vpn-kill-switch.com/tags/apple/index.xml</link>
    <description>Recent content on VPN kill switch</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright> </copyright>
    <atom:link href="https://vpn-kill-switch.com/tags/apple/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>PF macOS &amp; BSD</title>
      <link>https://vpn-kill-switch.com/post/pf/</link>
      <pubDate>Sat, 12 Nov 2016 16:24:58 +0100</pubDate>
      
      <guid>https://vpn-kill-switch.com/post/pf/</guid>
      <description>

&lt;p&gt;For &lt;a href=&#34;https://apple.com/mac/&#34;&gt;Mac OS X&lt;/a&gt; &amp;amp;
&lt;a href=&#34;https://en.wikipedia.org/wiki/Berkeley_Software_Distribution&#34;&gt;BSD&lt;/a&gt;
users &lt;a href=&#34;https://www.freebsd.org/doc/handbook/firewalls-pf.html&#34;&gt;PF&lt;/a&gt;
can be the best option to create a &lt;strong&gt;kill switch&lt;/strong&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;PF (Packet Filter, also written pf) is a BSD licensed stateful packet filter,
a central piece of software for firewalling. It is comparable to netfilter
(iptables), ipfw and ipfilter. PF was developed for OpenBSD, but has been ported
to many other operating systems. &lt;a href=&#34;https://en.wikipedia.org/wiki/PF_(firewall&#34;&gt;https://en.wikipedia.org/wiki/PF_(firewall&lt;/a&gt;)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;To create a &lt;strong&gt;kill switch&lt;/strong&gt; using PF, a &lt;a href=&#34;https://www.openbsd.org/faq/pf/&#34;&gt;configuration file&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;TL;DR
&lt;a href=&#34;https://vpn-kill-switch.com/post/killswitch/&#34;&gt;killswitch&lt;/a&gt; is a CLI command that can help finding the
active interfaces, create and load pf rules.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Example of a &lt;code&gt;killswitch.pf.conf&lt;/code&gt; configuration file:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The file can be creted on the user $HOME directory and have any name.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;int_en1 = &amp;quot;en1&amp;quot;
vpn_utun1 = &amp;quot;utun1&amp;quot;
vpn_ip = &amp;quot;1.2.3.4&amp;quot;
set block-policy drop
set ruleset-optimization basic
set skip on lo0
block all
pass on $int_en1 proto udp to 224.0.0.251 port 5353
pass on $int_en1 proto udp from any port 67 to any port 68
pass on $int_en1 inet proto icmp all icmp-type 8 code 0
pass on $int_en1 proto {tcp, udp} from any to $vpn_ip
pass on $vpn_utun1 all
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The first 3 lines need to be changed/adjusted based on the running system.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;int_en1 = &amp;quot;en1&amp;quot;     # active interface
vpn_utun1 = &amp;quot;utun1&amp;quot; # VPN interface
vpn_ip = &amp;quot;1.2.3.4&amp;quot;  # VPN peer IP
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;After editing the &lt;code&gt;killswitch.pf.conf&lt;/code&gt; file, the PF rules can be loaded by
running:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo pfctl -Fa -f ~/killswitch.pf.conf -e
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To disable:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo pfctl -d
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To load your system defaults (no kill switch)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo pfctl -Fa -f /etc/pf.conf -e
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In some cases where the VPN peer IP is random, the VPN needs to be connected
first and later load the &lt;strong&gt;kill switch&lt;/strong&gt; PF rules, otherwise wont be possible to
connect.&lt;/p&gt;

&lt;h1 id=&#34;active-interface&#34;&gt;active interface&lt;/h1&gt;

&lt;p&gt;In this example &lt;code&gt;int_en1&lt;/code&gt; is the active interface (WiFi) to find the
active interfaces run the following command within a terminal:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ route get 0.0.0.0 2&amp;gt;/dev/null | awk &#39;/interface: / {print $2}&#39;;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;or&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ ifconfig | pcregrep -M -o &#39;^[^\t:]+:([^\n]|\n\t)*status: active&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This commands can give more information:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ networksetup -listnetworkserviceorder
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ scutil --dns
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;vpn-interface&#34;&gt;VPN interface&lt;/h1&gt;

&lt;p&gt;After connecting to the VPN, by running the command &lt;code&gt;ifconfig -a&lt;/code&gt; and
searching for &lt;code&gt;POINTOPOINT&lt;/code&gt;, could help to find the interface used by the VPN:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ ifconfig -a | grep -i POINTOPOINT
gif0: flags=8010&amp;lt;POINTOPOINT,MULTICAST&amp;gt; mtu 1280
utun0: flags=8051&amp;lt;UP,POINTOPOINT,RUNNING,MULTICAST&amp;gt; mtu 2000
utun1: flags=8051&amp;lt;UP,POINTOPOINT,RUNNING,MULTICAST&amp;gt; mtu 1500
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In this example there are 3 interfaces, but in many cases only 1 will be active
and with an assigned &lt;a href=&#34;https://en.wikipedia.org/wiki/IPv4&#34;&gt;IPv4&lt;/a&gt;, by using the
command &lt;code&gt;ifconfig &amp;lt;interface_name&amp;gt;&amp;gt;&lt;/code&gt; this can be found, example:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ ifconfig utun1
utun1: flags=8051&amp;lt;UP,POINTOPOINT,RUNNING,MULTICAST&amp;gt; mtu 1500
	inet 172.21.21.233 --&amp;gt; 172.21.21.233 netmask 0xfffffe00
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;vpn-peer-ip&#34;&gt;VPN PEER IP&lt;/h1&gt;

&lt;p&gt;This is the IP of the VPN server providing the service, after connecting to the
VPN many apps display this IP:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://vpn-kill-switch.com/img/peerIP.jpg&#34; alt=&#34;peerIP&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Once knowing the active interface this can be double checked by using the
command &lt;code&gt;netstat&lt;/code&gt;, example:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ netstat -rna -f inet | grep en1
default            192.168.1.1        UGSc            7        2     en1
143.255.56.99/32   192.168.1.1        UGSc            2        0     en1
143.255.56.99      192.168.1.1        UGHWIi          2     5239     en1
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>